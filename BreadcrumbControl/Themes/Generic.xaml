<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:behavior="clr-namespace:BreadcrumbControl.Behavior"
                    xmlns:classicThemes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
                    xmlns:converters="clr-namespace:BreadcrumbControl.Converters"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:local="clr-namespace:BreadcrumbControl"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <converters:AndMultiBoolConverter x:Key="AndMultiBoolConverter" />
    <converters:OrMultiBoolConverter x:Key="OrMultiBoolConverter" />

    <Geometry x:Shared="True" x:Key="RightArrowGeometry">M0,0 L5,3.5 0,7 z</Geometry>
    <Geometry x:Key="DownArrowGeometry">M0,3 L7,3 3.5,7 z</Geometry>
    <Geometry x:Key="OverflowArrowGeometry">F1 M7,0 L4,3 7,6 M3,0 L0,3 3,6</Geometry>



    <Path x:Key="DownArrow"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="{StaticResource DownArrowGeometry}"
          Fill="Black"
          Focusable="False"
          SnapsToDevicePixels="True" />

    <Path x:Key="OverflowArrow"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="{StaticResource OverflowArrowGeometry}"
          Fill="Black"
          Focusable="False"
          SnapsToDevicePixels="True" />


    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--    <Style x:Key="BreadcrumbButtonDropDown" TargetType="local:BreadcrumbButton">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="ContextMenu.PlacementTarget" Value="{Binding RelativeSource={RelativeSource Self}}"/>
                <Setter Property="ContextMenu.Placement" Value="Bottom"/>
                <Setter Property="ContextMenu.IsOpen" Value="True"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <LinearGradientBrush x:Key="ButtonNormalBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="#F3F3F3" />
        <GradientStop Offset="0.5" Color="#EBEBEB" />
        <GradientStop Offset="0.5" Color="#DDDDDD" />
        <GradientStop Offset="1" Color="#CDCDCD" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />

    <Style x:Key="AeroButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <themes:ButtonChrome x:Name="Chrome"
                                         Background="{TemplateBinding Background}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         RenderDefaulted="{TemplateBinding IsDefaulted}"
                                         RenderMouseOver="{TemplateBinding IsMouseOver}"
                                         RenderPressed="{TemplateBinding IsPressed}"
                                         SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Chrome" Property="RenderDefaulted" Value="true" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="Chrome" Property="RenderPressed" Value="true" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFocusVisual2">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="4"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClassicButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="{x:Static classicThemes:ClassicBorderDecorator.ClassicBorderBrush}" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="0,0,1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <classicThemes:ClassicBorderDecorator x:Name="ContentContainer"
                                                          Background="{TemplateBinding Background}"
                                                          BorderBrush="{TemplateBinding BorderBrush}"
                                                          BorderStyle="Raised"
                                                          BorderThickness="3,3,3,0"
                                                          SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </classicThemes:ClassicBorderDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="ContentContainer" Property="BorderStyle" Value="RaisedFocused" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="ContentContainer" Property="BorderStyle" Value="RaisedFocused" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ContentContainer" Property="BorderStyle" Value="RaisedPressed" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="ContentContainer" Property="BorderStyle" Value="RaisedPressed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BreadcrumbButton" TargetType="Button">
        <Setter Property="Width" Value="30" />
    </Style>

    <Style TargetType="{x:Type local:Breadcrumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Breadcrumb}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropDownBreadcrumbButtonStyle" TargetType="local:BreadcrumbButton">
        <Setter Property="Content">
            <Setter.Value>
                <Path HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Data="{StaticResource RightArrowGeometry}"
                                          Fill="Black"
                                          Focusable="False"
                                          SnapsToDevicePixels="True" />
            </Setter.Value>


        </Setter>
<Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu HorizontalOffset="-14"
                                                 x:Name="PART_ContextMenu"
                                                 IsOpen="{Binding Path=DataContext.IsChecked, RelativeSource={RelativeSource Self}}"
                                                 IsTextSearchEnabled="True" 
                                                 ItemsSource="{Binding Path=DataContext.Items, RelativeSource={RelativeSource Self}}"
                                                 Placement="Bottom"
                                                 >
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Header}"/>
                            <Setter Property="Icon" Value="{Binding Icon}"/>
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                </ContextMenu>
            </Setter.Value>
</Setter>

    </Style>

    <Style TargetType="{x:Type local:BreadcrumbItem}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <ContentPresenter Content="{Binding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:BreadcrumbItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="15" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <local:BreadcrumbButton x:Name="PART_HeaderButton"
                                                    Grid.Column="0"
                                                    IsChecked="{Binding ElementName=PART_Button,
                                                                        Path=IsChecked,
                                                                        Mode=OneWay}">
                                <ContentPresenter x:Name="PART_Header"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding Header}"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}" />
                            </local:BreadcrumbButton>

                            <local:BreadcrumbButton x:Name="PART_Button"
                                                    Grid.Column="1"
                                                    IsMouseOverRender="{Binding ElementName=PART_HeaderButton, Path=IsMouseOver}"
                                                    Style="{StaticResource DropDownBreadcrumbButtonStyle}"
                                                    />
                         
                            <ContentPresenter x:Name="PART_Content"
                                              Grid.Column="2"
                                              Content="{TemplateBinding SelectedValue}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    


    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <themes:ButtonChrome x:Name="Chrome"
                                         Background="{TemplateBinding Background}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         RenderDefaulted="{TemplateBinding Button.IsDefaulted}"
                                         RenderMouseOver="{TemplateBinding IsMouseOver}"
                                         RenderPressed="{TemplateBinding IsPressed}"
                                         SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Chrome" Property="RenderDefaulted" Value="true" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Chrome" Property="RenderPressed" Value="true" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:BreadcrumbButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <themes:ButtonChrome x:Name="Chrome"
                                         Background="{TemplateBinding Background}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         RenderDefaulted="{TemplateBinding Button.IsDefaulted}"
                                         RenderPressed="{TemplateBinding IsPressed}"
                                         RoundCorners="False"
                                         SnapsToDevicePixels="true">
                        <themes:ButtonChrome.RenderMouseOver>
                            <MultiBinding Converter="{StaticResource OrMultiBoolConverter}">
                                <Binding Path="IsMouseOver" RelativeSource="{RelativeSource AncestorType=local:BreadcrumbButton, Mode=FindAncestor}" />
                                <Binding Path="IsMouseOverRender" RelativeSource="{RelativeSource AncestorType=local:BreadcrumbButton, Mode=FindAncestor}" />
                            </MultiBinding>
                        </themes:ButtonChrome.RenderMouseOver>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter TargetName="Chrome" Property="RenderDefaulted" Value="true" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Chrome" Property="RenderPressed" Value="true" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
